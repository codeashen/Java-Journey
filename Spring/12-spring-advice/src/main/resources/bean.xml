<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置service -->
    <bean id="accountService" class="com.ashen.advice.service.impl.AccountServiceImpl"/>

    <!-- 配置通知类 -->
    <bean id="logger" class="com.ashen.advice.utils.Logger"/>
    <!-- 配置AOP -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut id="pt1" expression="execution(* com.ashen.advice.service.impl.*.*(..))"/>
        <aop:pointcut id="pt2" expression="execution(* com.ashen.advice.service.impl.AccountServiceImpl.saveAccount(..))"/>
        <aop:pointcut id="pt3" expression="execution(* com.ashen.advice.service.impl.AccountServiceImpl.updateAccount(..))"/>
        <!-- 配置切面 -->
        <aop:aspect id="logAdvice" ref="logger">
            <!-- 配置前置通知，在切入点方法之前执行 -->
            <aop:before method="beforePrintLog" pointcut-ref="pt2"/>
            <!-- 配置后置通知，在切入点方法正常执行之后值。它和异常通知永远只能执行一个 -->
            <aop:after-returning method="afterReturningPrintLog" pointcut-ref="pt2"/>
            <!-- 配置异常通知：在切入点方法执行产生异常之后执行。它和后置通知永远只能执行一个 -->
            <aop:after-throwing method="afterThrowingPrintLog" pointcut-ref="pt2"/>
            <!-- 配置最终通知：无论切入点方法是否正常执行它都会在其后面执行 -->
            <aop:after method="afterPrintLog" pointcut-ref="pt2"/>

            <!-- 配置环绕通知 详细的注释请看Logger类中 -->
            <aop:around method="aroundPrintLog" pointcut-ref="pt3"/>
        </aop:aspect>
    </aop:config>


</beans>